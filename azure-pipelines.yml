# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

#控制哪些分支改动能触发执行此文件
trigger:
  branches: #通过分支改变触发
    include:
    - master
    - develop/*
    exclude:
    - releases/old*

jobs:
#debug只有在develop分支的情况下运行
- job: Debug 
  #【非master】分支就会运行
  #代理池
  pool:   
    vmImage: 'macOS-10.13'
    #如果成功,运行develop分支
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/features/develop'))
    variables:   #默认及自定义的变量
      scheme: 'AndroidTestDemo'
      sdk: 'iphoneos'
      configuration: 'Debug'
      P12Password: '123456'
      pgyapktitle: '掌上天软debug'
      uploadpath: '$(Build.ArtifactStagingDirectory)/app/build/outputs/apk/debug/app-debug.apk'
      #uploadpath: '/Users/vsts/agent/2.147.1/work/1/a/output/iphoneos/Debug/iOSTestDemo.ipa'
      uKey: '04c6390dd62a9cbd3d9e5011f4d23f66'
      apikey: 'aa9a0540df1ca877bf86b2188a286137'
  steps:
  #gradle编译  https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/android?view=azure-devops
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'assembleDebug'
    
# 对apk签名  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/android-signing?view=azure-devops
  - task: AndroidSigning@3 
    inputs:
      apkFiles: '**/*.apk' #遍历所有apk文件
      apksign: true #是否签名
      apksignerKeystoreFile: androiddemodevelops
      apksignerKeystorePassword: 111111
      apksignerKeystoreAlias: key0
      apksignerKeyPassword: 111111
      apksignerArguments: '--verbose' 
      zipalign: false
      apksignerFile: 
      zipalignFile:
# 复制文件 https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/copy-files?view=azure-devops&tabs=yaml
  - task: CopyFiles@2
    inputs:
      contents: '/Users/vsts/agent/2.148.0/work/1/s/app/build/outputs/apk/debug/app-debug.apk'
      targetFolder: $(Build.ArtifactStagingDirectory)
#添加到指定的 Artifacts（工件） https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/copy-files?view=azure-devops&tabs=yaml
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: MyBuildOutputs

 #上传蒲公英脚本任务
  - task: ShellScript@2
    inputs:
      scriptPath: uploadPgyer.sh
      args: '$(uploadpath) $(uKey) $(apikey)' # Optional
      #disableAutoCwd: false # Optional
      #cwd: '' # Optional
      #failOnStandardError: false

#正式环境的安装包
- job: Release
#master分支就会运行
  pool:   #代理池
  vmImage: 'macOS-10.13'
  #如果成功,运行主分支
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/features/develop'))
  variables:   #默认及自定义的变量
    scheme: 'AndroidTestDemo'
    sdk: 'iphoneos'
    configuration: 'Debug'
    P12Password: '111111'
    pgyapktitle: '掌上天软'
    uploadpath: '$(Build.ArtifactStagingDirectory)/app/build/outputs/apk/debug/app-debug.apk'
    #uploadpath: '/Users/vsts/agent/2.147.1/work/1/a/output/iphoneos/Debug/iOSTestDemo.ipa'
    uKey: '04c6390dd62a9cbd3d9e5011f4d23f66'
    apikey: 'aa9a0540df1ca877bf86b2188a286137'

steps:
#gradle编译  https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/android?view=azure-devops
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'
# 对apk签名  https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/android-signing?view=azure-devops
- task: AndroidSigning@3 
  inputs:
    apkFiles: '**/*.apk' #遍历所有apk文件
    apksign: true #是否签名
    apksignerKeystoreFile: androiddemodevelops
    apksignerKeystorePassword: 111111
    apksignerKeystoreAlias: key0
    apksignerKeyPassword: 111111
    apksignerArguments: '--verbose' 
    zipalign: false
    apksignerFile: 
    zipalignFile:


# 复制文件 https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/copy-files?view=azure-devops&tabs=yaml
- task: CopyFiles@2
  inputs:
    contents: '/Users/vsts/agent/2.148.0/work/1/s/app/build/outputs/apk/debug/app-debug.apk'
    targetFolder: $(Build.ArtifactStagingDirectory)

#添加到指定的 Artifacts（工件） https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/copy-files?view=azure-devops&tabs=yaml
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: MyBuildOutputs

 #上传蒲公英脚本任务
- task: ShellScript@2
  inputs:
    scriptPath: uploadPgyer.sh
    args: '$(uploadpath) $(uKey) $(apikey) $(pgyapktitle)' # Optional
    #disableAutoCwd: false # Optional
    #cwd: '' # Optional
    #failOnStandardError: false
